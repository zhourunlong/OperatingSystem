from functools import partial

def ParseFlags(out, env, cmd):
    out.update(env.ParseFlags(cmd))
    for key, val in list(out.items()):
        if len(out[key]) == 0:
            out.pop(key)

# LIBS will hold all of the libraries we want to link against
LIBS = []
# LIBPATH will hold where those LIBS live
LIBPATH = []
# Flags to pass to GCC
CCFLAGS = []

# Add fuse
LIBS.extend(["fuse3"])
CCFLAGS.extend(["-D_FILE_OFFSET_BITS=64"])
CCFLAGS.extend(["-D FUSE_USE_VERSION=31"])

# Tell scons about everything we setup above
env = Environment(LIBS = LIBS, LIBPATH = LIBPATH, CCFLAGS = CCFLAGS)
out = dict()
env.ParseConfig('pkg-config --cflags fuse3', partial(ParseFlags, out))
env.AppendUnique(**out)

env.Program("fuse", Glob("*.c"))
